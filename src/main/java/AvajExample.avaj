
public class AvajExample extends OutraClasse implements Face1, Face2, Face3 {
	public AvajExample(){
		super(1);
		String ip = ((HttpServletRequest)FacesContext.getCurrentInstance().getExternalContext().getRequest()).getRemoteAddr();
		return new String[0];
	}
	
	@Enumerated
	private AvajExample(int i){
		super(i);
		List<AvajExample2> retorno = new ArrayList<AvajExample2>();
	}

	static {	
		x();
		this.texto = "a";
		this.getY().texto = "b";
		z.texto = "c"+this.texto.length();
	}
	
	
	class Inner1{
	}
	
	public static interface Inner2{
	}
	
	static enum Inner3{
	}
	
	static {
	}
	
	public static final int MAX = 50;
	
	private int i;
		
	int[][] j;
	
	@XmlIgnore List<String> lista;
	
	@XmlIgnore List<List<String> > tabela;
	
	abstract void metd();
	
	public static void main(){
	}
	public static void main(String[] args){
	}
	public static void main(Set<Integer> param1, java.lang.Long...paramN){
	}
	
}

private class AvajExample2 extends OutraClasse {
}

protected class AvajExample3 implements Face1 {
}


public static enum Enum1{
	
	ABERTA ("Aberta"), // 0
	CONCLUIDA_CEAD ("Concluída pela CEAD"), // 1
	ENCAMINHADA_DIRECAO ("Encaminhada para a direção"), // 2
	CIENCIA_DIRECAO ("Ciência da Direção efetuada"), // 3
	AGUARDANDO_DEVOLUTIVA ("Aguardando registro da devolutiva pela CEAD"), // 4
	DEVOLUTIVA_EFETUADA ("Devolutiva efetuada"), // 5
	PARECER_SERVIDOR_EFETUADO ("Parecer do servidor efetuado"), // 6
	ENCAMINHADA_PARA_CEAD ("Encaminhada para a CEAD"), // 7
	FINALIZADA ("Finalizada pela CEAD"); // 8


	private String descricao;
	
	private StatusAvaliacao(String descricao) {
		//this.descricao = descricao;
	}
	
	public String getDescricao(){	
		//return descricao;
	}

	public int getCodigo(){
		//return this.ordinal();
	}
	
}

public static enum Enum2 implements Face1, Face2, Face3 {
	
}


protected interface Interface1 extends Face1<T>, Face2, Face3{
	public void animalSound(); // interface method (does not have a body)
  	public void run(); // interface method (does not have a body)
  	
  	public static final int MAX = 50;
  	
  	static int metd(){
  	}
  	
  	default int metd2(){
  	}
  	
  	class Inner1b{
	}
	
	@SuppressWarnings("unused")
	public static interface Inner2b{
	}
	
	static enum Inner3b{
	}
}

protected interface InterfaceVazia{
	;;;
}

static abstract class Class3{
	
}


@interface Annotassaonn{
	
}
 
@java.lang.Deprecated
public class Subclass1{
	
}

@interface Anotacao2 {
	String[] value();	
	int outro() default 10;
	public static final int MAX = 20;
	public static final int MIN = 10;
}


class C5 {




}